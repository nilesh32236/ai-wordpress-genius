<?php

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
    die;
}

/**
 * Handles the child theme creation logic.
 */
function ai_wp_genius_handle_child_theme_creation() {
    // Check if our form was submitted
    if ( ! isset( $_POST['submit_child_theme'] ) || ! isset( $_POST['parent_theme'] ) ) {
        return;
    }

    // Verify the nonce
    if ( ! isset( $_POST['ai_wp_genius_nonce'] ) || ! wp_verify_nonce( $_POST['ai_wp_genius_nonce'], 'ai_wp_genius_create_child_theme' ) ) {
        wp_die( __( 'Security check failed.', 'ai-wordpress-genius' ) );
    }

    // Check user capabilities
    if ( ! current_user_can( 'install_themes' ) ) {
        wp_die( __( 'You do not have permission to install themes.', 'ai-wordpress-genius' ) );
    }

    $parent_theme_slug = sanitize_text_field( $_POST['parent_theme'] );
    $parent_theme = wp_get_theme( $parent_theme_slug );

    if ( ! $parent_theme->exists() ) {
        // Handle error: parent theme not found
        add_action( 'admin_notices', function() {
            echo '<div class="notice notice-error is-dismissible"><p>' . __( 'Parent theme not found.', 'ai-wordpress-genius' ) . '</p></div>';
        });
        return;
    }

    // Define child theme properties
    $child_theme_slug = $parent_theme_slug . '-child';
    $child_theme_name = $parent_theme->get( 'Name' ) . ' Child';
    $child_theme_path = get_theme_root() . '/' . $child_theme_slug;

    // Check if child theme already exists
    if ( file_exists( $child_theme_path ) ) {
        add_action( 'admin_notices', function() use ( $child_theme_name ) {
            echo '<div class="notice notice-warning is-dismissible"><p>' . sprintf( __( 'The child theme "%s" already exists.', 'ai-wordpress-genius' ), esc_html( $child_theme_name ) ) . '</p></div>';
        });
        return;
    }

    // Create child theme directory
    if ( ! wp_mkdir_p( $child_theme_path ) ) {
        add_action( 'admin_notices', function() {
            echo '<div class="notice notice-error is-dismissible"><p>' . __( 'Unable to create the child theme directory.', 'ai-wordpress-genius' ) . '</p></div>';
        });
        return;
    }

    // --- Create style.css ---
    $stylesheet_content = sprintf(
        "/*\n" .
        " Theme Name:   %s\n" .
        " Theme URI:    %s\n" .
        " Description:  %s\n" .
        " Author:       %s\n" .
        " Author URI:   %s\n" .
        " Template:     %s\n" .
        " Version:      1.0.0\n" .
        " License:      %s\n" .
        " License URI:  %s\n" .
        "*/\n",
        $child_theme_name,
        $parent_theme->get( 'ThemeURI' ),
        esc_html( $child_theme_name ) . ' - A child theme of ' . esc_html( $parent_theme->get( 'Name' ) ),
        $parent_theme->get( 'Author' ),
        $parent_theme->get( 'AuthorURI' ),
        $parent_theme_slug,
        $parent_theme->get( 'License' ),
        $parent_theme->get( 'LicenseURI' )
    );

    // --- Create functions.php ---
    $functions_content = "<?php\n" .
        "// Exit if accessed directly\n" .
        "if ( ! defined( 'ABSPATH' ) ) exit;\n\n" .
        "// BEGIN ENQUEUE PARENT ACTION\n" .
        "// AUTO-GENERATED BY AI WORDPRESS GENIUS\n" .
        "if ( ! function_exists( 'ai_wp_genius_child_enqueue_styles' ) ) {\n" .
        "    function ai_wp_genius_child_enqueue_styles() {\n" .
        "        wp_enqueue_style( 'parent-style', get_template_directory_uri() . '/style.css' );\n" .
        "    }\n" .
        "}\n" .
        "add_action( 'wp_enqueue_scripts', 'ai_wp_genius_child_enqueue_styles' );\n" .
        "// END ENQUEUE PARENT ACTION";

    // Initialize the WP_Filesystem.
    global $wp_filesystem;
    if ( empty( $wp_filesystem ) ) {
        require_once( ABSPATH . '/wp-admin/includes/file.php' );
        WP_Filesystem();
    }

    $style_file = $child_theme_path . '/style.css';
    $functions_file = $child_theme_path . '/functions.php';
    $style_result = false;
    $functions_result = false;
    $filesystem_method = 'native'; // Default to native PHP functions.

    // Use WP_Filesystem if it's available and properly initialized.
    if ( is_a( $wp_filesystem, 'WP_Filesystem_Base' ) && method_exists( $wp_filesystem, 'put_contents' ) ) {
        $style_result = $wp_filesystem->put_contents( $style_file, $stylesheet_content, FS_CHMOD_FILE );
        $functions_result = $wp_filesystem->put_contents( $functions_file, $functions_content, FS_CHMOD_FILE );
        $filesystem_method = 'wp_filesystem';
    }

    // Fallback to native PHP functions if WP_Filesystem failed or wasn't available.
    if ( ! $style_result || ! $functions_result ) {
        $filesystem_method = 'native';
        $style_result = file_put_contents( $style_file, $stylesheet_content );
        $functions_result = file_put_contents( $functions_file, $functions_content );
    }

    if ( ! $style_result || ! $functions_result ) {
        // Clean up created directory and files if writing fails.
        if ( 'wp_filesystem' === $filesystem_method && is_a( $wp_filesystem, 'WP_Filesystem_Base' ) ) {
            $wp_filesystem->rmdir( $child_theme_path, true );
        } else {
            // Native PHP cleanup.
            if ( file_exists( $style_file ) ) {
                @unlink( $style_file );
            }
            if ( file_exists( $functions_file ) ) {
                @unlink( $functions_file );
            }
            if ( is_dir( $child_theme_path ) ) {
                @rmdir( $child_theme_path );
            }
        }
        add_action( 'admin_notices', function() {
            echo '<div class="notice notice-error is-dismissible"><p>' . esc_html__( 'Could not write theme files (style.css or functions.php). Please check file permissions.', 'ai-wordpress-genius' ) . '</p></div>';
        });
        return;
    }

    // Success!
    add_action( 'admin_notices', function() use ( $child_theme_name ) {
        $themes_page_url = admin_url( 'themes.php' );
        echo '<div class="notice notice-success is-dismissible"><p>' . sprintf( __( 'Successfully created the "%s" child theme. You can now <a href="%s">activate it from the Themes page</a>.', 'ai-wordpress-genius' ), esc_html( $child_theme_name ), esc_url( $themes_page_url ) ) . '</p></div>';
    });

}
// Hook the handler to 'admin_init' to catch the form submission before headers are sent.
add_action( 'admin_init', 'ai_wp_genius_handle_child_theme_creation' );
